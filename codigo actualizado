extends Control

@export var Address = "192.168.56.1"
@export var Port = 8910
var peer

func _ready():
    multiplayer.peer_connected.connect(peer_connected)
    multiplayer.peer_disconnected.connect(peer_disconnected)
    multiplayer.connected_to_server.connect(connected_to_server)
    multiplayer.connection_failed.connect(connection_failed)

func peer_connected(id):
    print("Jugador conectado: ", id)

func peer_disconnected(id):
    print("Jugador desconectado: ", id)

func connected_to_server():
    print("Conectado al servidor")

func connection_failed():
    print("Conexi√≥n fallida")

@rpc("any_peer", "call_local")
func StartGame():
    var scene = load("res://Mapas/mapa.tscn").instantiate()
    get_tree().root.add_child(scene)
    self.hide()

func _on_host_button_down():
    peer = ENetMultiplayerPeer.new()
    var error = peer.create_server(Port, 2)
    
    if error != OK:
        print("No se pudo alojar la partida: ", error)
        return
    
    if peer.get_host():
        peer.get_host().compress(ENetConnection.COMPRESS_RANGE_CODER)
    
    multiplayer.set_multiplayer_peer(peer)
    print("Esperando a los jugadores...")

func _on_join_button_down():
    peer = ENetMultiplayerPeer.new()
    var error = peer.create_client(Address, Port)
    
    if error != OK:
        print("No se pudo conectar al servidor: ", error)
        return
    
    if peer.get_host():
        peer.get_host().compress(ENetConnection.COMPRESS_RANGE_CODER)
    
    multiplayer.set_multiplayer_peer(peer)
    print("Intentando conectar al servidor...")

func _on_start_game_button_down():
    if multiplayer.is_server():
        StartGame.rpc()
    else:
        rpc_id(1, "StartGame")  # Solo el servidor puede iniciar el juego
